apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ namespace }}
  name: {{ application.name }}
  labels:
    app: {{ application.name }}
    version: {{ application.version }}
spec:
  minReadySeconds: {{ deployment.ready.initial_delay_seconds | default(30) }}
  progressDeadlineSeconds: {{ deployment.startup.progress_deadline_seconds | default(300) }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ application.name }}
  replicas: {{ deployment.replicas | default(1) }}
  template:
    metadata:
      namespace: {{ namespace }}
      name: {{ application.name }}
      labels:
        app: {{ application.name }}
        version: {{ application.version }}
    spec:
      containers:
        - name: {{ application.name }}
          image: {{ image.application.project }}/{{ image.application.image }}:{{ application.version }}
          imagePullPolicy: {{ deployment.image_pull_policy | default("IfNotPresent") }}

          env:
            - name: JAVA_OPTS
              value: "{{ resources.java_opts | join(" ") }}"

          envFrom:
            - secretRef:
                name: {{ application.name }}

          ports:
            - name: {{ application.port.tcp.name }}
              containerPort: {{ application.port.tcp.number }}
            - name: {{ application.port.actuator.name }}
              containerPort: {{ application.port.actuator.number }}

          volumeMounts:
            - name: {{ application.name }}-config
              mountPath: {{ application.path.config }}
              readOnly: true

            - name: {{ application.name }}-logs
              mountPath: {{ application.path.logs }}

          resources:
            requests:
              cpu: {{ resources.requests.cpu }}
              memory: {{ resources.requests.memory }}
            limits:
              cpu: {{ resources.limits.cpu }}
              memory: {{ resources.limits.memory }}

          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ application.port.actuator.number }}
            timeoutSeconds: {{ deployment.health.timeout_seconds | default(1) }}
            failureThreshold: {{ deployment.health.failure_threshold | default(1) }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ application.port.actuator.number }}
            periodSeconds: {{ deployment.health.period_seconds | default(5) }}
            timeoutSeconds: {{ deployment.health.timeout_seconds | default(5) }}
            failureThreshold: {{ deployment.health.failure_threshold | default(2) }}
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ application.port.actuator.number }}
            initialDelaySeconds: {{ deployment.startup.initial_delay_seconds | default(10) }}
            periodSeconds: {{ deployment.startup.period_seconds | default(5) }}
            timeoutSeconds: {{ deployment.startup.timeout_seconds | default(1) }}
            failureThreshold: {{ deployment.startup.failure_threshold | default(60) }}

        - name: {{ filebeat.name }}
          image: {{ image.filebeat.project }}/{{ image.filebeat.image }}:{{ image.filebeat.version }}
          imagePullPolicy: IfNotPresent

          ports:
            - name: {{ filebeat.port.tcp.name }}
              containerPort: {{ filebeat.port.tcp.number }}

          volumeMounts:
            - name: {{ application.name }}-logs
              mountPath:  {{ filebeat.path.input }}
              readOnly: true
            - name: {{ filebeat.name }}-config
              mountPath: {{ filebeat.path.config }}/filebeat.yml
              subPath: filebeat.yaml

          resources:
            requests:
              cpu: {{ filebeat.resources.requests.cpu }}
              memory: {{ filebeat.resources.requests.memory }}
            limits:
              cpu: {{ filebeat.resources.limits.cpu }}
              memory: {{ filebeat.resources.limits.memory }}

      restartPolicy: {{ deployment.restart_policy | default("Always") }}
      terminationGracePeriodSeconds: {{ deployment.restart_policy | default(15) }}
      nodeSelector:
        custom.node: {{ env }}

      volumes:
        - name: {{ application.name }}-config
          configMap:
            name: {{ application.name }}
        - name: {{ application.name }}-logs
          emptyDir: {}
        - name: {{ filebeat.name }}-config
          configMap:
            name: {{ application.name }}-{{ filebeat.name }}