plugins {
    id "org.springframework.boot" version "2.6.1"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "java-library"
    id "jacoco"
}

group = "ru.softdarom.qrcheck"
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

jar {
    enabled = false
}

bootJar {
    archiveFileName = "google-auth.jar"
}

configurations {
    annotationProcessor {
        extendsFrom compileOnly
    }

    testAnnotationProcessor {
        extendsFrom testCompileOnly
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.0"
    }
}

dependencies {
    api "org.springframework.boot:spring-boot-starter-oauth2-client"
    api "org.springframework.boot:spring-boot-starter-security"
    api "org.springframework.boot:spring-boot-starter-web"
    api "org.springframework.boot:spring-boot-starter-actuator"
    api "org.springframework.cloud:spring-cloud-starter-sleuth"
    api "org.springframework.cloud:spring-cloud-starter-openfeign"
    api "org.springframework.boot:spring-boot-starter-validation"
    api "org.springframework.cloud:spring-cloud-starter-kubernetes-client-config"

    api "javax.validation:validation-api:2.0.1.Final"
    api "io.micrometer:micrometer-registry-prometheus:1.8.2"
    api "org.zalando:logbook-spring-boot-starter:2.14.0"
    api "org.springdoc:springdoc-openapi-ui:1.6.6"
    api "net.logstash.logback:logstash-logback-encoder:7.0.1"

    api "ru.softdarom.security:qrcheck-security-starter:2.1.0"

    compileOnly "org.projectlombok:lombok"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"

    testCompileOnly "org.projectlombok:lombok"
    testCompileOnly "org.springframework.boot:spring-boot-configuration-processor"

    developmentOnly "org.springframework.boot:spring-boot-devtools"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.2"
    testImplementation "com.github.tomakehurst:wiremock:2.27.2"
}

jacocoTestReport {
    reports {
        xml {
            enabled true
            destination file("${buildDir}/jacoco/coverage.xml")
        }
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = "LINE"
                value = "COVEREDRATIO"
                minimum = 0.8
            }
        }
    }
}

test {
    useJUnitPlatform {
        includeTags "spring-mock", "spring-integration", "unit"
    }
    finalizedBy(jacocoTestReport, jacocoTestCoverageVerification)
}

tasks.register('deployConfigsArchive', Zip) {
    from ".deploy/"
    archiveName "deploy.zip"
    destinationDirectory.set(file("$buildDir"))
}

tasks.named("assemble").get().finalizedBy("deployConfigsArchive")